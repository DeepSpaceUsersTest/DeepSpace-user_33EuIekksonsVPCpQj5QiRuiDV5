{
  "clock": 35,
  "documentClock": 35,
  "tombstones": {},
  "tombstoneHistoryStartsAtClock": 1,
  "schema": {
    "schemaVersion": 2,
    "sequences": {
      "com.tldraw.store": 5,
      "com.tldraw.asset": 1,
      "com.tldraw.camera": 1,
      "com.tldraw.canvas_storage": 1,
      "com.tldraw.document": 2,
      "com.tldraw.instance": 25,
      "com.tldraw.instance_page_state": 5,
      "com.tldraw.page": 1,
      "com.tldraw.instance_presence": 6,
      "com.tldraw.pointer": 1,
      "com.tldraw.shape": 4,
      "com.tldraw.asset.bookmark": 2,
      "com.tldraw.asset.image": 5,
      "com.tldraw.asset.video": 5,
      "com.tldraw.shape.arrow": 7,
      "com.tldraw.shape.bookmark": 2,
      "com.tldraw.shape.draw": 3,
      "com.tldraw.shape.embed": 4,
      "com.tldraw.shape.frame": 1,
      "com.tldraw.shape.geo": 12,
      "com.tldraw.shape.group": 0,
      "com.tldraw.shape.highlight": 1,
      "com.tldraw.shape.image": 5,
      "com.tldraw.shape.line": 6,
      "com.tldraw.shape.note": 9,
      "com.tldraw.shape.text": 4,
      "com.tldraw.shape.video": 4,
      "com.tldraw.shape.miyagi-widget": 0,
      "com.tldraw.shape.univer": 0,
      "com.tldraw.shape.block": 0,
      "com.tldraw.shape.canvas-link": 0,
      "com.tldraw.shape.file": 0,
      "com.tldraw.binding.arrow": 1
    }
  },
  "documents": [
    {
      "state": {
        "gridSize": 10,
        "name": "",
        "meta": {
          "roomId": "room-3aaeaf38-0d79-4ff8-87cc-4669c16c1b3f",
          "canvasMode": "freeform",
          "canvasName": "New Subcanvas"
        },
        "id": "document:document",
        "typeName": "document"
      },
      "lastChangedClock": 2
    },
    {
      "state": {
        "meta": {},
        "id": "page:A3EIpXO_FxRMhcFlVnLtz",
        "name": "Page 1",
        "index": "a1",
        "typeName": "page"
      },
      "lastChangedClock": 0
    },
    {
      "state": {
        "widgets": {
          "shape:qbSUetdjc5NWTd4a": {
            "__widget_config": "{\"roomId\":\"room-3aaeaf38-0d79-4ff8-87cc-4669c16c1b3f\",\"pageId\":\"page:A3EIpXO_FxRMhcFlVnLtz\",\"shapeId\":\"shape:qbSUetdjc5NWTd4a\",\"templateHandle\":\"notepad-react-test\"}",
            "notepad-content": "dsfdsfdfdfds"
          }
        },
        "global": {},
        "id": "canvas_storage:main",
        "typeName": "canvas_storage"
      },
      "lastChangedClock": 13
    },
    {
      "state": {
        "id": "shape:qbSUetdjc5NWTd4a",
        "typeName": "shape",
        "type": "miyagi-widget",
        "parentId": "page:A3EIpXO_FxRMhcFlVnLtz",
        "index": "a1",
        "x": 400.3076171875,
        "y": 348.4716796875,
        "rotation": 0,
        "isLocked": false,
        "opacity": 1,
        "meta": {
          "initializationState": "ready"
        },
        "props": {
          "w": 512.333984375,
          "h": 226.33772225215517,
          "widgetId": "notepad-react-test_1758912594840",
          "templateHandle": "notepad-react-test",
          "htmlContent": "<!DOCTYPE html>\n<html>\n<head>\n  <title>React Widget</title>\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.production.min.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.production.min.js\"></script>\n  <style>\n    body { \n      margin: 0; \n      padding: 0; \n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n    #react-root { \n      width: 100%; \n      height: 100vh; \n      display: flex;\n      flex-direction: column;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"react-root\"></div>\n  \n  <script>\n    // Compiled JSX code\n    \n    // Extract all React hooks dynamically (present and future)\n    const reactHooks = {};\n    Object.keys(React).forEach(key => {\n      if (key.startsWith('use') && typeof React[key] === 'function') {\n        reactHooks[key] = React[key];\n      }\n    });\n    \n    // Destructure all available hooks for easy use\n    const {\n      useState, useEffect, useRef, useMemo, useCallback, useContext, \n      useReducer, useLayoutEffect, useImperativeHandle, useDebugValue,\n      useDeferredValue, useId, useInsertionEffect, useSyncExternalStore,\n      useTransition, ...otherHooks\n    } = { ...reactHooks, ...React };\n    \n    // Custom hooks for Miyagi widgets\n    // useStorage hook will be injected by MiyagiStorageService\n    // useGlobalStorage hook will be injected by MiyagiStorageService\n    \n    // Export the widget component - the injection script will handle rendering\nconst WidgetComponent = NotepadWidget;\n    \n    \n    // Auto-render when DOM is ready\n    document.addEventListener('DOMContentLoaded', function() {\n      const root = ReactDOM.createRoot(document.getElementById('react-root'));\n      root.render(React.createElement(WidgetComponent));\n    });\n  </script>\n</body>\n</html>",
          "jsxContent": "\n// Export the widget component - the injection script will handle rendering\nexport default NotepadWidget;",
          "color": "black",
          "zoomScale": 1
        }
      },
      "lastChangedClock": 35
    }
  ]
}